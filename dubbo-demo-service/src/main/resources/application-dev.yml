# 打印详细信息日志
debug: true

# http服务端口
server:
  port: 6050

# dubbo相关
dubbo:
  application:
    name: dubbo-demo-service
  registry:
    address: zookeeper://47.101.135.160:2180?backup=47.101.135.160:2181,47.101.135.160:2182 # 注册中心地址
  # scan:
  #  base-packages: com.jinhaoxun.dubbod.service # 扫描提供服务的路径，启动类加上@EnableDubbo时，可以不需要这个
  protocol:
    name: dubbo
    port: 20881 # 服务在dubbo中端口号
  monitor:
    protocol: registry # 自动注册dubbo的monitor
  consumer:
    check: false # 启动检查有没有提供者
    timeout: 12000 # 消费者调用超时时间

# 配置mybatis-plus
mybatis-plus:
  # xml映射文件位置，衔接pom文件里面的resources配置扫描
  mapper-locations: classpath*:com/jinhaoxun/dubbo/mapper/**/xml/*.xml
  # type-aliases-package: com.jinhaoxun.accommon.pojo # 别名包扫描路径，通过该属性可以给包中的类注册别名
  # configuration:
  #  cache-enabled: true # 开启MybatisPlus 二级缓存，主要用来跟redis注解缓存使用
  # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl  # 开启MybatisPlus SQL日志打印

# spring相关
spring:
  # aop:
  #  auto: true # 开启spring aop
  # cache:
  #  type: redis # 指定spring缓存为redis
  thymeleaf:
    cache: false # 关闭thymeleaf缓存，开发时使用，否则没有实时画面
    check-template-location: true # 检查模板是否存在，然后再呈现
    enabled: true  # 启用MVC Thymeleaf视图分辨率
    encoding: utf-8
    mode: HTML # 指定模板编码
    prefix: classpath:/templates/ # 在构建URL时预先查看名称的前缀
    servlet:
      content-type: text/html # Content-Type值
    suffix: .html # 构建URL时附加查看名称的后缀.
  # profiles:
  #  include: common,dao,service,redis,notify # 配置子模块yml文件
  datasource: # 配置mysql
    driver-class-name: com.mysql.cj.jdbc.Driver # mysql数据库驱动
    password: root
    url: jdbc:mysql://47.101.135.160:3306/apecome?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8
    username: root
  devtools: # spirng热部署
    restart:
      enabled: true # 设置开启热部署
    freemarker:
      cache: false # 页面不加载缓存，修改即时生效
  redis:
    database: 0 # redis 数据库索引（默认为0）
    host: 47.101.135.160
    password: root # redis 服务器连接密码（默认为空）
    port: 6379
    timeout: 12000  # 连接超时时间（毫秒），默认2000ms
      # cluster:
      # nodes: 192.168.211.134:7000,192.168.211.134:7001,192.168.211.134:7002
    # maxRedirects: 6
    pool:
      max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
      max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-idle: 8 # 连接池中的最大空闲连接
      min-idle: 0 # 连接池中的最小空闲连接

# 配置线程池
threadPoolTaskExecutor:
  corePoolSize: 10
  maxPoolSize: 100 # 最大线程数
  keepAliveTime: 10
  queueCapacity: 200
  threadNamePrefix: Async-Executor- # 线程名统一前缀

# 配置rocketmq
rocketmq:
  producer:
    groupname: serviceProducerGroup
    maxmessagesize: 131072
    sendmsgtimeout: 10000
    # instanceName: 实例名
  consumer:
    groupname: serviceConsumerGroup
    topicname: service
    consumethreadmin: 20
    consumethreadmax: 64
  namesrvaddr: 47.101.135.160:9876

# 配置rabbitmq
rabbitmq:
  host: 47.101.135.160
  port: 15672
  username: admin
  password: admin
  publisher-confirms: true
  publisher-returns: true
  virtual-host: /

# 配置stomprabbitmq
stomprabbitmq:
  relayhost: 47.101.135.160
  port: 61613

# 文件上传，下载地址
file:
  upload:
    path: D:/service/dubbo/file/
  download:
    path: D:/service/dubbo/file/

# 打印日志统一根路径
log:
  file: D:/service/dubbo/log